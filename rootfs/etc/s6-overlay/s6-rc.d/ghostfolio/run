#!/command/with-contenv bashio
# -*- bash -*-
# shellcheck shell=bash
set -e

if bashio::config.true 'silent'; then
  bashio::log.warning "Silent mode activated. Only errors will be shown. Please disable in addon options if you need to debug"
fi

bashio::log.info "Starting redis"
if bashio::config.true 'silent'; then
  exec redis-server > /dev/null 2>&1 &
else
  exec redis-server &
fi

access_token_salt=$()
jwt_secret_key=$(bashio::config 'jwt_secret_key')

if bashio::config.is_empty 'access_token_salt'; then
  access_token_salt=$(openssl rand -hex 32)
  bashio::addon.option 'access_token_salt' "$access_token_salt"
fi
if bashio::config.is_empty 'jwt_secret_key'; then
  jwt_secret_key=$(openssl rand -hex 32)
  bashio::addon.option 'jwt_secret_key' "$jwt_secret_key"
fi

ACCESS_TOKEN_SALT=$(bashio::config 'access_token_salt')
JWT_SECRET_KEY=$(bashio::config 'jwt_secret_key')

POSTGRES_HOST=$(bashio::config 'database_host')
POSTGRES_DB=$(bashio::config 'database_name')
POSTGRES_PASS=$(bashio::config 'database_pass')
POSTGRES_PORT=$(bashio::config 'database_port')
POSTGRES_USER=$(bashio::config 'database_user')

API_KEY_COINGECKO_DEMO=$(bashio::config 'api_key_coingecko_demo')
API_KEY_COINGECKO_PRO=$(bashio::config 'api_key_coingecko_pro')
if [ "${API_KEY_COINGECKO_PRO}" = 'null' ]; then
  API_KEY_COINGECKO_PRO=""
fi
REDIS_HOST=localhost
REDIS_PORT=6379
NODE_ENV=production
DATABASE_URL="postgresql://$POSTGRES_USER:$POSTGRES_PASS@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB?connect_timeout=300&sslmode=prefer"
TZ=UTC # Force timezone to prevent https://github.com/ghostfolio/ghostfolio/issues/2669 which is probably due to https://github.com/brianc/node-postgres/issues/2141

export ACCESS_TOKEN_SALT JWT_SECRET_KEY POSTGRES_HOST POSTGRES_DB POSTGRES_PASS POSTGRES_PORT POSTGRES_USER \
       API_KEY_COINGECKO_DEMO API_KEY_COINGECKO_PRO REDIS_HOST REDIS_PORT NODE_ENV DATABASE_URL TZ

# These are optional and applied last so we can override those set above if needed.
for env_var in $(bashio::config 'env_vars|keys'); do
    name=$(bashio::config "env_vars[${env_var}].name")
    value=$(bashio::config "env_vars[${env_var}].value")
    bashio::log.debug "Setting Env Variable ${name} to ${value}"
    export "${name}=${value}"
done

bashio::log.info "Starting Ghostfolio"
cd /ghostfolio/apps/api
if bashio::config.true 'silent'; then
  yarn start:production >/dev/null
else
  yarn start:production
fi